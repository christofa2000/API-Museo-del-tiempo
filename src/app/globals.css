@import url("https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700&display=swap");
@import "tailwindcss";

/* ðŸŽ¨ Sistema de Design Tokens */
:root {
  /* Paleta Cosmic */
  --cosmic-50: #f4f2ff;
  --cosmic-100: #e7e3ff;
  --cosmic-200: #cfc7ff;
  --cosmic-300: #b2a7ff;
  --cosmic-400: #9a8cff;
  --cosmic-500: #7c6bff;
  --cosmic-600: #6955f0;
  --cosmic-700: #5342c6;
  --cosmic-800: #3a2f99;
  --cosmic-900: #0b0b17;

  /* Superficies y bordes */
  --surface-1: rgba(255, 255, 255, 0.06);
  --surface-2: rgba(255, 255, 255, 0.1);
  --surface-3: rgba(255, 255, 255, 0.14);
  --border-1: rgba(255, 255, 255, 0.12);
  --border-2: rgba(255, 255, 255, 0.18);

  /* Texto */
  --text-1: rgba(255, 255, 255, 0.92);
  --text-2: rgba(255, 255, 255, 0.72);
  --text-3: rgba(255, 255, 255, 0.56);

  /* Efectos */
  --glow: 0 10px 30px -10px rgba(124, 107, 255, 0.35);
  --glow-lg: 0 20px 40px -10px rgba(124, 107, 255, 0.25);
}

/* ðŸŽ¨ DefinÃ­ tu paleta con @theme (v4) */
@theme {
  --color-cosmic-50: var(--cosmic-50);
  --color-cosmic-100: var(--cosmic-100);
  --color-cosmic-200: var(--cosmic-200);
  --color-cosmic-300: var(--cosmic-300);
  --color-cosmic-400: var(--cosmic-400);
  --color-cosmic-500: var(--cosmic-500);
  --color-cosmic-600: var(--cosmic-600);
  --color-cosmic-700: var(--cosmic-700);
  --color-cosmic-800: var(--cosmic-800);
  --color-cosmic-900: var(--cosmic-900);
}

/* Estilos base */
:root {
  color-scheme: dark;
}

body {
  @apply bg-black text-white antialiased; /* <- negro liso */
  font-family: "Plus Jakarta Sans", system-ui, -apple-system, sans-serif;
  color: var(--text-1);
  position: relative;
}

position: relative;

/* Asegurar que el contenido estÃ© por encima del background de partÃ­culas */
main,
header {
  position: relative;
  z-index: 10;
}

/* Estilos para el contenedor de partÃ­culas */
.particles-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  pointer-events: none;
}

.particles-container canvas {
  display: block;
  width: 100%;
  height: 100%;
}

/* Utilidades de glassmorphism */
.glass {
  background: var(--surface-1);
  backdrop-filter: blur(12px);
  border: 1px solid var(--border-1);
}

.glass-2 {
  background: var(--surface-2);
  backdrop-filter: blur(12px);
  border: 1px solid var(--border-2);
}

/* TipografÃ­a mejorada */
.text-balance {
  text-wrap: balance;
}

/* Estados de foco mejorados */
.focus-ring {
  @apply focus:outline-none focus:ring-2 focus:ring-white/40 focus:ring-offset-2 focus:ring-offset-transparent;
}

/* Animaciones respetuosas */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

.gradient-grid {
  background-image: radial-gradient(
      circle at 20% 20%,
      rgba(106, 90, 205, 0.15),
      transparent 40%
    ),
    radial-gradient(
      circle at 80% 0%,
      rgba(184, 168, 255, 0.12),
      transparent 45%
    ),
    radial-gradient(
      circle at 50% 100%,
      rgba(106, 90, 205, 0.18),
      transparent 45%
    );
}
/* Anti-overflow global y barra vertical estable */
html {
  overflow-y: scroll;
  scrollbar-gutter: stable both-edges;
  scroll-behavior: smooth;
}
html,
body {
  overflow-x: clip; /* mejor que hidden: evita crear un scroll container nuevo */
}
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* LÃ­nea elÃ©ctrica (borde inferior animado) */
.header-electric {
  position: relative;
  overflow: hidden; /* Contener la animaciÃ³n dentro del header */
}
.header-electric::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: -1px;
  height: 2px;
  /* Gradiente con brillo que se "mueve" */
  background: linear-gradient(
    90deg,
    transparent 0%,
    var(--color-cosmic-300) 20%,
    var(--color-cosmic-500) 50%,
    var(--color-cosmic-300) 80%,
    transparent 100%
  );
  filter: drop-shadow(0 0 6px var(--color-cosmic-500));
  animation: electric-run 3s linear infinite;
  opacity: 0.8;
}
@keyframes electric-run {
  0% {
    transform: translateX(-10%);
  }
  100% {
    transform: translateX(10%);
  }
}
